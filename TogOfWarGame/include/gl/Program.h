// author : Lewis Ward
// program: Tog Of War Game
// date   : 14/12/2014
// © 2016 Lewis Ward. All rights reserved.
#pragma once
#include "Shader.h"

// GL Shaders namespace
namespace gls
{
//----------------------------------------------------------------------------------------------------------------------
/// \brief  Program for shader
//----------------------------------------------------------------------------------------------------------------------
class Program
{
public:
	//----------------------------------------------------------------------------------------------------------------------
	/// \brief Constructor
	//----------------------------------------------------------------------------------------------------------------------
	Program() : m_program(0){};

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief Destructor
	//----------------------------------------------------------------------------------------------------------------------
	~Program();

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief creates a shader program
	/// \parma Shader* vertex shader
	/// \parma Shader* fragment shader
	//----------------------------------------------------------------------------------------------------------------------
	bool create(const Shader* const vertex, const Shader* const fragment);

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief bind the program
	//----------------------------------------------------------------------------------------------------------------------
	void bind() const;

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief unbind the program
	//----------------------------------------------------------------------------------------------------------------------
	void unbind() const;

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief get the shader program
	/// \parma uint32_t* program
	//----------------------------------------------------------------------------------------------------------------------
	inline uint32_t program() { return m_program; }

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief set the uniform
	/// \parma const char* name of the uniform
	/// \parma float value
	//----------------------------------------------------------------------------------------------------------------------
	void uniform_1i(const char* uniformName, float value);

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief set the uniform
	/// \parma const char* name of the uniform
	/// \parma float X
	/// \parma float Y
	/// \parma float Z
	/// \parma float W
	//----------------------------------------------------------------------------------------------------------------------
	void uniform_4f(const char* uniformName, float floatZero, float floatOne, float floatTwo, float floatThree);

	//----------------------------------------------------------------------------------------------------------------------
	/// \brief set the uniform
	/// \parma const char* name of the uniform
	/// \size_t count
	/// \bool transpose
	/// \float[] 16 floats (from matrix)
	//----------------------------------------------------------------------------------------------------------------------
	void uniform_Matrix4(const char* uniformName, size_t count, bool transpose, float mvpFloat[]);

private:
	uint32_t m_program; ///< shader program
};
////////////////////////////
}; // end of gls namespace
////////////////////////////
